import toPath from './lib/toPath';
import getRoute from './lib/getRoute';
import getPath from './lib/getPath';

console.log('./lib/toPath');
console.assert(toPath() === '/', 'undefined');
console.assert(toPath(null) === '/', 'null');
console.assert(toPath('') === '/', 'empty');
console.assert(toPath('/') === '/', '/');
console.assert(toPath('/x') === '/x', '/x');
console.assert(toPath('/x/') === '/x/', '/x/');
console.assert(toPath('/x?z=1') === '/x', '/x?z=1');
console.assert(toPath('/x/?z=1') === '/x/', '/x/?z=1');
console.assert(toPath('/x/abc') === '/x/abc', '/x/abc');
console.assert(toPath('/x/abc/') === '/x/abc/', '/x/abc/');

console.log('./lib/getRoute');
console.assert(getRoute('/') === '/', '/');
console.assert(getRoute('/', null) === '/', '/, null');
console.assert(getRoute('/', '') === '/', '/, empty');
console.assert(getRoute('/', '/') === '/', '/, /');
console.assert(getRoute('', '/') === '/', 'empty, /');
console.assert(getRoute(null, '/') === '/', 'null, /');
console.assert(getRoute('/', '/x') === null, '/, /x');
console.assert(getRoute('/x', '/x') === '/', '/x, /x');
console.assert(getRoute('/x/', '/x') === '/', '/x/, /x');
console.assert(getRoute('/x/y', '/x') === '/y', '/x/y, /x');
console.assert(getRoute('/x/y/', '/x') === '/y/', '/x/y/, /x');
console.assert(getRoute('/x/y?z=test', '/x') === '/y', '/x/y?z=test, /x');
console.assert(getRoute('/x/y/?z=test', '/x') === '/y/', '/x/y/?z=test, /x');
console.assert(getRoute('/x/y/abc', '/x') === '/y/abc', '/x/y/abc, /x');
console.assert(getRoute('/x/y/abc/', '/x') === '/y/abc/', '/x/y/abc/, /x');
console.assert(getRoute('/abc', '/x') === null, '/abc, /x');
console.assert(getRoute('/abc/de', '/x') === null, '/abc/de, /x');
console.assert(getRoute('/abc/x', '/x') === null, '/abc/x, /x');
console.assert(getRoute('/x0abc/y', '/x') === null, '/x0abc/y, /x');
console.assert(getRoute('/xt/y/abc', '/x') === null, '/xt/y/abc, /x');

console.log('./lib/getPath');
console.assert(getPath() === '/', 'no args');
console.assert(getPath(null) === '/', 'null');
console.assert(getPath('') === '/', 'empty');
console.assert(getPath('/') === '/', '/');
console.assert(getPath(undefined, '') === '/', 'undefined, empty');
console.assert(getPath(undefined, null) === '/', 'undefined, null');
console.assert(getPath(null, null) === '/', 'null, null');
console.assert(getPath('', '') === '/', 'empty, empty');
console.assert(getPath('/abc') === '/abc', '/abc');
console.assert(getPath('/abc/') === '/abc/', '/abc/');
console.assert(getPath('/abc', 'x') === '/x/abc', '/abc, x');
console.assert(getPath('/abc', '/x') === '/x/abc', '/abc, /x');
console.assert(getPath('/abc/', '/x') === '/x/abc/', '/abc/, /x');
